name: Deploy to GitHub Pages

on:
  push:
    branches: ['main']
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history to count tags

      - name: Bump version and update package.json
        run: |
          # Calculate new version based on current year, month, and release count.
          YEAR=$(date +'%Y')
          MONTH=$(date +%-m)
          RELEASE_COUNT=$(git tag --list "${YEAR}.${MONTH}.*" | wc -l | tr -d ' ')
          NEW_RELEASE=$((RELEASE_COUNT + 1))
          NEW_VERSION="${YEAR}.${MONTH}.${NEW_RELEASE}"
          echo "New version: $NEW_VERSION"

          # Update package.json version (this writes the new version into package.json)
          npm version "$NEW_VERSION" --no-git-tag-version

          # Commit the updated package.json
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git commit -am "chore: bump version to $NEW_VERSION [skip ci]"

          # Tag the new version and push changes (including tags)
          git tag "$NEW_VERSION"
          git push origin HEAD --follow-tags

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: "${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}"
          restore-keys: |
            ${{ runner.os }}-node

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:headless

      - name: Build app
        run: npm run build:prod

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./dist/browser
          destination: ./_site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
